[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
[user]
    name = {{ private['git']['name'] }}
    email = {{ private['git']['mail'] }}
    {% if private['git']['signingkey'] %}
    signingkey = {{ private['git']['signingkey'] }}
    {% endif %}
[pull]
    rebase = false
[color]
    branch = auto
    diff = auto
    status = auto
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow 
    remote = green
    upstream = cyan
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[format]
    pretty = format:%Cred%h%Creset - %Cgreen%an (%ae) -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset
    date = relative
[alias]
    clean-all = clean -fdx
    c = clean -fdX
    clean-ignored = clean -fdX
    reset-full = "!f() { git clean -fdx; git checkout .; } ; f"
    pack-create = "!f() { git bundle create $1 --all; git bundle verify $1; } ; f"
    pack-create-with-stash = "!f() { git bundle create $1 refs/stash --all; git bundle verify $1; } ; f"
    pack-fetch-with-stash = "!f() { git fetch $1 refs/stash; git stash apply FETCH_HEAD; } ; f"
    aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
    lg = log --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset %Cred[%G?]%Creset'
    l = log --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset %Cred[%G?]%Creset'
    g = "!f() { git log --graph --pretty=format:'%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %Cred[%G?]%Creset' --date=relative $@; } ; f"
    graph = "!f() { git log --graph --pretty=format:'%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %Cred[%G?]%Creset' --date=relative $@; } ; f"
    push-all = "!f() { git push --follow-tags $@; } ; f"
    y = diff "@{yesterday}"
    w = whatchanged
    whatadded = log --diff-filter=A --
    c = commit
    st = status -sb
    dc = diff --cached
    d = diff
    co = checkout
    df = diff
    addp = add --patch
    a = add --patch
    diffc = diff --cached
    head = show HEAD
    h = show HEAD
    rebase-origin = rebase -i origin/HEAD
    amendfiles = commit --amend --no-edit
    review-local = "!git lg @{push}.."
    reword = commit --amend
    uncommit = reset --soft HEAD~1
    unstage = reset
    untrack = rm --cache --
    conflicts = diff --name-only --diff-filter=U
[core]
    # pager = cat
    excludesfile = ~/.gitignore_global
    editor = nvim
    whitespace = -trailing-space
    autocrlf = input
[diff]
    mnemonicPrefix = true
    renames = true
    rename = copy
    wordRegex = .
    submodule = log
    tool = nvim
[difftool "nvim"]
    cmd = nvim -d $LOCAL $REMOTE
[fetch]
    recurseSubmodules = on-demand
[grep]
    break = true
    heading = true
    lineNumber = true
    extendedRegexp = true
[log]
    abbrevCommit = true
    follow = true
    decorate = false
[interactive]
    singlekey = true
[merge]
    ff = false
[mergetool]
    keepBackup = false
    keepTemporaries = false
    writeToTemp = true
    prompt = false
[pull]
    rebase = merges
[push]
    default = upstream
    followTags = true
[status]
    submoduleSummary = true
    showUntrackedFiles = all
[tag]
    sort = version:refname
[versionsort]
    prereleaseSuffix = -pre
    prereleaseSuffix = .pre
    prereleaseSuffix = -beta
    prereleaseSuffix = .beta
    prereleaseSuffix = -rc
    prereleaseSuffix = .rc
[commit]
{% if private['git']['signingkey'] %}
    gpgsign = true
{% endif %}